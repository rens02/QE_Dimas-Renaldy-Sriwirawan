{
	"info": {
		"_postman_id": "9c1499d0-c72b-4c82-b84c-c70ffba7f282",
		"name": "Soal Prio1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Mengambil semua data [+]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mengambil semua data [-]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData[0].id;\r",
							"let exID = 1;\r",
							"let statusCode = pm.response.code;\r",
							"\r",
							"pm.test(`Result ID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})\r",
							"pm.test(`Response status code is ${statusCode}` , function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menambahkan data [+]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"BOARRR\",\r\n    \"body\": \"BAAAAAR\",\r\n    \"userId\": 122\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menambahkan data [-]kedua",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData.userId;\r",
							"let exID = -55;\r",
							"let statusCode = pm.response.code;\r",
							"\r",
							"pm.test(`Result UserID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})\r",
							"pm.test(`Response status code is ${statusCode}` , function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"BOARRR\",\r\n    \"body\": \"BAAAAAR\",\r\n    \"userId\": -55\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menambahkan data [-]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"BOARRR\",\r\n    \"body\": \"BAAAAAR\",\r\n    \"userId\": 555-\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mengambil data berdasarkan id [+]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData[0].id;\r",
							"let exID = 3;\r",
							"\r",
							"pm.test(`Result ID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts?id=3",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "id",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Mengambil data berdasarkan id [-]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData[0].id;\r",
							"let exID = -3;\r",
							"\r",
							"pm.test(`Result ID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts?id=-3",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "id",
							"value": "-3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Mengubah data berdasarkan id [+]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData.id;\r",
							"let exID = 1;\r",
							"let resUserId = jsonData.userId;\r",
							"let exUserId = 212;\r",
							"\r",
							"pm.test(`Result ID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})\r",
							"pm.test(`Result UserID should be ${exUserId} and its ${resUserId} `, function(){\r",
							"    pm.expect(resUserId).to.eql(exUserId);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 212,\r\n    \"id\": 1,\r\n    \"title\": \"Dimas Renaldy S\",\r\n    \"body\": \"Dimas adalah mahasiswa di gunadarma\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mengubah data berdasarkan id [-]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resId = jsonData.id;\r",
							"let exID = -1;\r",
							"let resUserId = jsonData.userId;\r",
							"let exUserId = -212;\r",
							"\r",
							"pm.test(`Result ID should be ${exID} and its ${resId} `, function(){\r",
							"    pm.expect(resId).to.eql(exID);\r",
							"})\r",
							"pm.test(`Result UserID should be ${exUserId} and its ${resUserId} `, function(){\r",
							"    pm.expect(resUserId).to.eql(exUserId);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": -212,\r\n    \"id\": -1,\r\n    \"title\": \"Dimas Renaldy S\",\r\n    \"body\": \"Dimas adalah mahasiswa di gunadarma\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menghapus data berdasarkan id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}